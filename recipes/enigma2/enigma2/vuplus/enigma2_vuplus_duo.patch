diff --git a/acinclude.m4 b/acinclude.m4
index ab3835e..dd6ef07 100755
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -159,6 +159,8 @@ fi
 
  #csh
 AC_DEFINE(BUILD_VUPLUS,1,[Define to 1 for 750])
+ # ikseong
+AC_DEFINE(BUILD_VUPLUS_DUO,1,[Define to 1 for 750])
 
 if test "$DVB_API_VERSION"; then
 	AC_DEFINE(HAVE_DVB,1,[Define to 1 if you have the dvb includes])
diff --git a/lib/dvb/frontend.cpp b/lib/dvb/frontend.cpp
index 9de5917..b576d52 100755
--- a/lib/dvb/frontend.cpp
+++ b/lib/dvb/frontend.cpp
@@ -2727,3 +2727,45 @@ RESULT eDVBFrontend::ScanSatCR()
 	setTone(iDVBFrontend::toneOff);
 	return 0;
 }
+
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+#ifndef SW_LOOP_THROUGH
+#define SW_LOOP_THROUGH	_IOW('o',103,int)
+#endif
+/*
+*	by ikseong
+*	for loopthrough
+*	onoff	1 - on
+*		   	0 - off
+*/
+RESULT eDVBFrontend::setLoopthrough(int onoff)
+{	
+	char filename[128];
+	int result;
+	int fd;
+	if ( m_fd<0)
+	{
+		sprintf(filename, "/dev/dvb/adapter0/frontend%d",m_slotid);
+		fd = ::open(filename, O_RDWR|O_NONBLOCK);
+	}
+	else
+	{
+		eDebug("fd = %d",m_fd);
+		fd=m_fd;
+	}
+	if(fd > 0)
+	{
+		result =	::ioctl(fd, SW_LOOP_THROUGH, &onoff);
+		eDebug("\n slot %d Loopthrough %d ->",m_slotid,onoff);
+		if (result < 0)
+			eDebugNoNewLine(" %d = %m",result);
+		else
+			eDebugNoNewLine("ok");
+		if(m_fd<0)
+			::close(fd);
+	}
+	else
+		eDebug("eDVBFrontend::setLoopthrough %d open error",m_slotid);	
+	return 0;
+}
+#endif		
diff --git a/lib/dvb/frontend.h b/lib/dvb/frontend.h
old mode 100644
new mode 100755
index bc31755..f409b28
--- a/lib/dvb/frontend.h
+++ b/lib/dvb/frontend.h
@@ -154,6 +154,9 @@ public:
 
 	RESULT turnOffSatCR(int satcr);
 	RESULT ScanSatCR();
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+	RESULT setLoopthrough(int onoff);	
+#endif
 };
 
 #endif // SWIG
diff --git a/lib/dvb/sec.cpp b/lib/dvb/sec.cpp
old mode 100644
new mode 100755
index 0e3e7e0..2c769d9
--- a/lib/dvb/sec.cpp
+++ b/lib/dvb/sec.cpp
@@ -375,7 +375,7 @@ RESULT eDVBSatelliteEquipmentControl::prepare(iDVBFrontend &frontend, FRONTENDPA
 			{
 			// calc Frequency
 				local = abs(sat.frequency 
-					- ((lof - (lof % 1000)) + ((lof % 1000)>500 ? 1000 : 0)) ); //TODO für den Mist mal ein Macro schreiben
+					- ((lof - (lof % 1000)) + ((lof % 1000)>500 ? 1000 : 0)) ); //TODO f? den Mist mal ein Macro schreiben
 				parm.FREQUENCY = (local - (local % 125)) + ((local % 125)>62 ? 125 : 0);
 				frontend.setData(eDVBFrontend::FREQ_OFFSET, sat.frequency - parm.FREQUENCY);
 
@@ -980,6 +980,9 @@ RESULT eDVBSatelliteEquipmentControl::clear()
 			}
 		}
 		it->m_frontend->setData(eDVBFrontend::SATPOS_DEPENDS_PTR, -1);
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+		it->m_frontend->setLoopthrough(0);
+#endif		
 		it->m_frontend->setData(eDVBFrontend::LINKED_PREV_PTR, -1);
 		it->m_frontend->setData(eDVBFrontend::LINKED_NEXT_PTR, -1);
 		it->m_frontend->setData(eDVBFrontend::ROTOR_POS, -1);
@@ -990,6 +993,9 @@ RESULT eDVBSatelliteEquipmentControl::clear()
 	for (eSmartPtrList<eDVBRegisteredFrontend>::iterator it(m_avail_simulate_frontends.begin()); it != m_avail_simulate_frontends.end(); ++it)
 	{
 		it->m_frontend->setData(eDVBFrontend::SATPOS_DEPENDS_PTR, -1);
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+		it->m_frontend->setLoopthrough(0);
+#endif		
 		it->m_frontend->setData(eDVBFrontend::LINKED_PREV_PTR, -1);
 		it->m_frontend->setData(eDVBFrontend::LINKED_NEXT_PTR, -1);
 		it->m_frontend->setData(eDVBFrontend::ROTOR_POS, -1);
@@ -1401,6 +1407,9 @@ RESULT eDVBSatelliteEquipmentControl::setTunerLinked(int tu1, int tu2)
 					fclose(f);
 				}
 			}
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+			p1->m_frontend->setLoopthrough(1);
+#endif
 		}
 
 		p1=p2=NULL;
@@ -1416,6 +1425,9 @@ RESULT eDVBSatelliteEquipmentControl::setTunerLinked(int tu1, int tu2)
 		{
 			p1->m_frontend->setData(eDVBFrontend::LINKED_PREV_PTR, (long)p2);
 			p2->m_frontend->setData(eDVBFrontend::LINKED_NEXT_PTR, (long)p1);
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+			p1->m_frontend->setLoopthrough(1);
+#endif
 			return 0;
 		}
 	}
diff --git a/lib/gdi/glcddc.cpp b/lib/gdi/glcddc.cpp
index 2a2973a..ed53877 100755
--- a/lib/gdi/glcddc.cpp
+++ b/lib/gdi/glcddc.cpp
@@ -34,6 +34,16 @@ void gLCDDC::exec(gOpcode *o)
 {
 	switch (o->opcode)
 	{
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+	case gOpcode::renderText:
+		if (o->parm.renderText->text)
+		{
+			lcd->updates(gDC::m_current_offset,o->parm.renderText->text);
+			free(o->parm.renderText->text);
+			delete o->parm.renderText;
+		}
+		break;
+#endif			
 	case gOpcode::flush:
 //		if (update)
 #ifndef BUILD_VUPLUS /* ikseong  */
diff --git a/lib/gdi/lcd.cpp b/lib/gdi/lcd.cpp
index c8560ac..56aff7f 100755
--- a/lib/gdi/lcd.cpp
+++ b/lib/gdi/lcd.cpp
@@ -183,3 +183,32 @@ void eDBoxLCD::update()
 	}
 }
 
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+char *eDBoxLCD::remaketext(char *text)
+{
+	int len = strlen(text);
+	int i;
+	char *result;
+	for(i=0;i<len;i++)
+	{
+		if(text[i]==0x0a)
+			result[i] = 0x20;
+		else
+			result[i]=text[i];
+	}
+	return text;
+}
+
+void eDBoxLCD::updates(ePoint start,char *text)
+{
+	char *result;
+	if((lcdfd >= 0) && (start.y() < 5))
+	{
+//		eDebug("vfd output - %s",text);
+		result = remaketext(text);
+//		eDebug("vfd output - %s",result);
+		//write(lcdfd,text,strlen(text));
+		write(lcdfd,result,strlen(result));
+	}
+}
+#endif
diff --git a/lib/gdi/lcd.h b/lib/gdi/lcd.h
old mode 100644
new mode 100755
index 99f921b..d460953
--- a/lib/gdi/lcd.h
+++ b/lib/gdi/lcd.h
@@ -36,6 +36,9 @@ public:
 	eSize size() { return res; }
 	
 	virtual void update()=0;
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+	virtual void updates(ePoint start,char *text) = 0;
+#endif
 #endif
 };
 
@@ -59,6 +62,10 @@ public:
 	void setInverted( unsigned char );
 	bool isOled() const { return !!is_oled; }
 	void update();
+#ifdef BUILD_VUPLUS_DUO /* ikseong  */
+	char *remaketext(char *text);
+	void updates(ePoint start,char *text);
+#endif
 };
 
 #endif
diff --git a/lib/python/Screens/ChoiceBox.py b/lib/python/Screens/ChoiceBox.py
old mode 100644
new mode 100755
index 7c8b142..39e70d4
--- a/lib/python/Screens/ChoiceBox.py
+++ b/lib/python/Screens/ChoiceBox.py
@@ -31,7 +31,9 @@ class ChoiceBox(Screen):
 			pos += 1
 		self["list"] = ChoiceList(list = self.list, selection = selection)
 		self["summary_list"] = StaticText()
-		self.updateSummary()
+#	ikseong
+#		self.updateSummary()
+		self.updateSummary(selection)
 				
 		self["actions"] = NumberActionMap(["WizardActions", "InputActions", "ColorActions", "DirectionActions"], 
 		{
@@ -120,14 +122,21 @@ class ChoiceBox(Screen):
 	def updateSummary(self, curpos=0):
 		pos = 0
 		summarytext = ""
+#	ikseong		
+#		for entry in self.summarylist:
+#			if pos > curpos-2 and pos < curpos+5:
+#				if pos == curpos:
+#					summarytext += ">"
+#				else:
+#					summarytext += entry[0]
+#				summarytext += ' ' + entry[1] + '\n'
+#			pos += 1
 		for entry in self.summarylist:
-			if pos > curpos-2 and pos < curpos+5:
-				if pos == curpos:
-					summarytext += ">"
-				else:
-					summarytext += entry[0]
-				summarytext += ' ' + entry[1] + '\n'
+			if pos == curpos:
+				summarytext += entry[1] +'\n'
+				break
 			pos += 1
+#
 		self["summary_list"].setText(summarytext)
 
 	def cancel(self):
diff --git a/lib/python/enigma_python.i b/lib/python/enigma_python.i
index f3e67d9..732b922 100755
--- a/lib/python/enigma_python.i
+++ b/lib/python/enigma_python.i
@@ -130,6 +130,7 @@ is usually caused by not marking PSignals as immutable.
 
 #define DEBUG
 #define BUILD_VUPLUS
+#define BUILD_VUPLUS_DUO
 typedef long time_t;
 %include "typemaps.i"
 %include "std_string.i"
